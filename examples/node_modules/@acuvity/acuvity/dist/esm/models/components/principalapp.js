/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const Principalapp$inboundSchema = z.object({
    labels: z.array(z.string()).optional(),
    name: z.string().optional(),
    tier: z.string().optional(),
});
/** @internal */
export const Principalapp$outboundSchema = z.object({
    labels: z.array(z.string()).optional(),
    name: z.string().optional(),
    tier: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Principalapp$;
(function (Principalapp$) {
    /** @deprecated use `Principalapp$inboundSchema` instead. */
    Principalapp$.inboundSchema = Principalapp$inboundSchema;
    /** @deprecated use `Principalapp$outboundSchema` instead. */
    Principalapp$.outboundSchema = Principalapp$outboundSchema;
})(Principalapp$ || (Principalapp$ = {}));
export function principalappToJSON(principalapp) {
    return JSON.stringify(Principalapp$outboundSchema.parse(principalapp));
}
export function principalappFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Principalapp$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Principalapp' from JSON`);
}
//# sourceMappingURL=principalapp.js.map