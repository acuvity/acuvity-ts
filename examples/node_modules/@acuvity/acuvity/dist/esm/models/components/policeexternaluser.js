/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const Policeexternaluser$inboundSchema = z.object({
    claims: z.array(z.string()),
    name: z.string(),
});
/** @internal */
export const Policeexternaluser$outboundSchema = z.object({
    claims: z.array(z.string()),
    name: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Policeexternaluser$;
(function (Policeexternaluser$) {
    /** @deprecated use `Policeexternaluser$inboundSchema` instead. */
    Policeexternaluser$.inboundSchema = Policeexternaluser$inboundSchema;
    /** @deprecated use `Policeexternaluser$outboundSchema` instead. */
    Policeexternaluser$.outboundSchema = Policeexternaluser$outboundSchema;
})(Policeexternaluser$ || (Policeexternaluser$ = {}));
export function policeexternaluserToJSON(policeexternaluser) {
    return JSON.stringify(Policeexternaluser$outboundSchema.parse(policeexternaluser));
}
export function policeexternaluserFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Policeexternaluser$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Policeexternaluser' from JSON`);
}
//# sourceMappingURL=policeexternaluser.js.map