import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { Principalapp, Principalapp$Outbound } from "./principalapp.js";
import { Principaluser, Principaluser$Outbound } from "./principaluser.js";
/**
 * The type of authentication.
 */
export declare const AuthType: {
    readonly Certificate: "Certificate";
    readonly UserToken: "UserToken";
    readonly AppToken: "AppToken";
    readonly Hostname: "Hostname";
    readonly Token: "Token";
    readonly TierToken: "TierToken";
    readonly External: "External";
};
/**
 * The type of authentication.
 */
export type AuthType = ClosedEnum<typeof AuthType>;
/**
 * The type of principal.
 */
export declare const PrincipalType: {
    readonly User: "User";
    readonly App: "App";
};
/**
 * The type of principal.
 */
export type PrincipalType = ClosedEnum<typeof PrincipalType>;
/**
 * Describe the principal.
 */
export type Principal = {
    /**
     * Describes the principal information of an application.
     */
    app?: Principalapp | undefined;
    /**
     * The type of authentication.
     */
    authType?: AuthType | undefined;
    /**
     * List of claims extracted from the user query.
     */
    claims?: Array<string> | undefined;
    /**
     * The team that was used to authorize the request.
     */
    team?: string | undefined;
    /**
     * The name of the token, if any.
     */
    tokenName?: string | undefined;
    /**
     * The type of principal.
     */
    type: PrincipalType;
    /**
     * Describes the principal information of a user.
     */
    user?: Principaluser | undefined;
};
/** @internal */
export declare const AuthType$inboundSchema: z.ZodNativeEnum<typeof AuthType>;
/** @internal */
export declare const AuthType$outboundSchema: z.ZodNativeEnum<typeof AuthType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace AuthType$ {
    /** @deprecated use `AuthType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Certificate: "Certificate";
        readonly UserToken: "UserToken";
        readonly AppToken: "AppToken";
        readonly Hostname: "Hostname";
        readonly Token: "Token";
        readonly TierToken: "TierToken";
        readonly External: "External";
    }>;
    /** @deprecated use `AuthType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Certificate: "Certificate";
        readonly UserToken: "UserToken";
        readonly AppToken: "AppToken";
        readonly Hostname: "Hostname";
        readonly Token: "Token";
        readonly TierToken: "TierToken";
        readonly External: "External";
    }>;
}
/** @internal */
export declare const PrincipalType$inboundSchema: z.ZodNativeEnum<typeof PrincipalType>;
/** @internal */
export declare const PrincipalType$outboundSchema: z.ZodNativeEnum<typeof PrincipalType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PrincipalType$ {
    /** @deprecated use `PrincipalType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly User: "User";
        readonly App: "App";
    }>;
    /** @deprecated use `PrincipalType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly User: "User";
        readonly App: "App";
    }>;
}
/** @internal */
export declare const Principal$inboundSchema: z.ZodType<Principal, z.ZodTypeDef, unknown>;
/** @internal */
export type Principal$Outbound = {
    app?: Principalapp$Outbound | undefined;
    authType?: string | undefined;
    claims?: Array<string> | undefined;
    team?: string | undefined;
    tokenName?: string | undefined;
    type: string;
    user?: Principaluser$Outbound | undefined;
};
/** @internal */
export declare const Principal$outboundSchema: z.ZodType<Principal$Outbound, z.ZodTypeDef, Principal>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Principal$ {
    /** @deprecated use `Principal$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Principal, z.ZodTypeDef, unknown>;
    /** @deprecated use `Principal$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Principal$Outbound, z.ZodTypeDef, Principal>;
    /** @deprecated use `Principal$Outbound` instead. */
    type Outbound = Principal$Outbound;
}
export declare function principalToJSON(principal: Principal): string;
export declare function principalFromJSON(jsonString: string): SafeParseResult<Principal, SDKValidationError>;
//# sourceMappingURL=principal.d.ts.map