import * as z from "zod";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import { Principal, Principal$Outbound } from "./principal.js";
/**
 * Represents an alert event raised by a policy.
 */
export type Alertevent = {
    /**
     * The name of the alert definition that triggered the alert event.
     */
    alertDefinition: string;
    /**
     * The namespace of the alert definition.
     */
    alertDefinitionNamespace?: string | undefined;
    /**
     * Describe the principal.
     */
    principal: Principal;
    /**
     * The provider used that the alert came from.
     */
    provider?: string | undefined;
    /**
     * When the alert event was raised.
     */
    timestamp?: Date | undefined;
};
/** @internal */
export declare const Alertevent$inboundSchema: z.ZodType<Alertevent, z.ZodTypeDef, unknown>;
/** @internal */
export type Alertevent$Outbound = {
    alertDefinition: string;
    alertDefinitionNamespace?: string | undefined;
    principal: Principal$Outbound;
    provider?: string | undefined;
    timestamp?: string | undefined;
};
/** @internal */
export declare const Alertevent$outboundSchema: z.ZodType<Alertevent$Outbound, z.ZodTypeDef, Alertevent>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Alertevent$ {
    /** @deprecated use `Alertevent$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Alertevent, z.ZodTypeDef, unknown>;
    /** @deprecated use `Alertevent$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Alertevent$Outbound, z.ZodTypeDef, Alertevent>;
    /** @deprecated use `Alertevent$Outbound` instead. */
    type Outbound = Alertevent$Outbound;
}
export declare function alerteventToJSON(alertevent: Alertevent): string;
export declare function alerteventFromJSON(jsonString: string): SafeParseResult<Alertevent, SDKValidationError>;
//# sourceMappingURL=alertevent.d.ts.map