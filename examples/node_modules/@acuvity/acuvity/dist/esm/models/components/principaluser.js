/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const Principaluser$inboundSchema = z.object({
    name: z.string().optional(),
});
/** @internal */
export const Principaluser$outboundSchema = z.object({
    name: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Principaluser$;
(function (Principaluser$) {
    /** @deprecated use `Principaluser$inboundSchema` instead. */
    Principaluser$.inboundSchema = Principaluser$inboundSchema;
    /** @deprecated use `Principaluser$outboundSchema` instead. */
    Principaluser$.outboundSchema = Principaluser$outboundSchema;
})(Principaluser$ || (Principaluser$ = {}));
export function principaluserToJSON(principaluser) {
    return JSON.stringify(Principaluser$outboundSchema.parse(principaluser));
}
export function principaluserFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Principaluser$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Principaluser' from JSON`);
}
//# sourceMappingURL=principaluser.js.map