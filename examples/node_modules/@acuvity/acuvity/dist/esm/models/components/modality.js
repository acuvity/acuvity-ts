/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const Modality$inboundSchema = z.object({
    group: z.string(),
    type: z.string(),
});
/** @internal */
export const Modality$outboundSchema = z.object({
    group: z.string(),
    type: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Modality$;
(function (Modality$) {
    /** @deprecated use `Modality$inboundSchema` instead. */
    Modality$.inboundSchema = Modality$inboundSchema;
    /** @deprecated use `Modality$outboundSchema` instead. */
    Modality$.outboundSchema = Modality$outboundSchema;
})(Modality$ || (Modality$ = {}));
export function modalityToJSON(modality) {
    return JSON.stringify(Modality$outboundSchema.parse(modality));
}
export function modalityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Modality$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Modality' from JSON`);
}
//# sourceMappingURL=modality.js.map