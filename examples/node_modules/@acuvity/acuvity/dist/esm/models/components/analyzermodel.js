/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const Analyzermodel$inboundSchema = z.object({
    name: z.string().optional(),
    revision: z.string().optional(),
});
/** @internal */
export const Analyzermodel$outboundSchema = z.object({
    name: z.string().optional(),
    revision: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Analyzermodel$;
(function (Analyzermodel$) {
    /** @deprecated use `Analyzermodel$inboundSchema` instead. */
    Analyzermodel$.inboundSchema = Analyzermodel$inboundSchema;
    /** @deprecated use `Analyzermodel$outboundSchema` instead. */
    Analyzermodel$.outboundSchema = Analyzermodel$outboundSchema;
})(Analyzermodel$ || (Analyzermodel$ = {}));
export function analyzermodelToJSON(analyzermodel) {
    return JSON.stringify(Analyzermodel$outboundSchema.parse(analyzermodel));
}
export function analyzermodelFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Analyzermodel$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Analyzermodel' from JSON`);
}
//# sourceMappingURL=analyzermodel.js.map