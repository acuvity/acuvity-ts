"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Principal$ = exports.Principal$outboundSchema = exports.Principal$inboundSchema = exports.PrincipalType$ = exports.PrincipalType$outboundSchema = exports.PrincipalType$inboundSchema = exports.AuthType$ = exports.AuthType$outboundSchema = exports.AuthType$inboundSchema = exports.PrincipalType = exports.AuthType = void 0;
exports.principalToJSON = principalToJSON;
exports.principalFromJSON = principalFromJSON;
const z = __importStar(require("zod"));
const schemas_js_1 = require("../../lib/schemas.js");
const principalapp_js_1 = require("./principalapp.js");
const principaluser_js_1 = require("./principaluser.js");
/**
 * The type of authentication.
 */
exports.AuthType = {
    Certificate: "Certificate",
    UserToken: "UserToken",
    AppToken: "AppToken",
    Hostname: "Hostname",
    Token: "Token",
    TierToken: "TierToken",
    External: "External",
};
/**
 * The type of principal.
 */
exports.PrincipalType = {
    User: "User",
    App: "App",
};
/** @internal */
exports.AuthType$inboundSchema = z
    .nativeEnum(exports.AuthType);
/** @internal */
exports.AuthType$outboundSchema = exports.AuthType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AuthType$;
(function (AuthType$) {
    /** @deprecated use `AuthType$inboundSchema` instead. */
    AuthType$.inboundSchema = exports.AuthType$inboundSchema;
    /** @deprecated use `AuthType$outboundSchema` instead. */
    AuthType$.outboundSchema = exports.AuthType$outboundSchema;
})(AuthType$ || (exports.AuthType$ = AuthType$ = {}));
/** @internal */
exports.PrincipalType$inboundSchema = z.nativeEnum(exports.PrincipalType);
/** @internal */
exports.PrincipalType$outboundSchema = exports.PrincipalType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PrincipalType$;
(function (PrincipalType$) {
    /** @deprecated use `PrincipalType$inboundSchema` instead. */
    PrincipalType$.inboundSchema = exports.PrincipalType$inboundSchema;
    /** @deprecated use `PrincipalType$outboundSchema` instead. */
    PrincipalType$.outboundSchema = exports.PrincipalType$outboundSchema;
})(PrincipalType$ || (exports.PrincipalType$ = PrincipalType$ = {}));
/** @internal */
exports.Principal$inboundSchema = z.object({
    app: principalapp_js_1.Principalapp$inboundSchema.optional(),
    authType: exports.AuthType$inboundSchema.optional(),
    claims: z.array(z.string()).optional(),
    team: z.string().optional(),
    tokenName: z.string().optional(),
    type: exports.PrincipalType$inboundSchema,
    user: principaluser_js_1.Principaluser$inboundSchema.optional(),
});
/** @internal */
exports.Principal$outboundSchema = z.object({
    app: principalapp_js_1.Principalapp$outboundSchema.optional(),
    authType: exports.AuthType$outboundSchema.optional(),
    claims: z.array(z.string()).optional(),
    team: z.string().optional(),
    tokenName: z.string().optional(),
    type: exports.PrincipalType$outboundSchema,
    user: principaluser_js_1.Principaluser$outboundSchema.optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Principal$;
(function (Principal$) {
    /** @deprecated use `Principal$inboundSchema` instead. */
    Principal$.inboundSchema = exports.Principal$inboundSchema;
    /** @deprecated use `Principal$outboundSchema` instead. */
    Principal$.outboundSchema = exports.Principal$outboundSchema;
})(Principal$ || (exports.Principal$ = Principal$ = {}));
function principalToJSON(principal) {
    return JSON.stringify(exports.Principal$outboundSchema.parse(principal));
}
function principalFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Principal$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Principal' from JSON`);
}
//# sourceMappingURL=principal.js.map