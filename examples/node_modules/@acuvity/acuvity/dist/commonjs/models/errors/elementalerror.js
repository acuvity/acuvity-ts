"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Elementalerror$ = exports.Elementalerror$outboundSchema = exports.Elementalerror$inboundSchema = exports.Data$ = exports.Data$outboundSchema = exports.Data$inboundSchema = exports.Elementalerror = void 0;
exports.dataToJSON = dataToJSON;
exports.dataFromJSON = dataFromJSON;
const z = __importStar(require("zod"));
const schemas_js_1 = require("../../lib/schemas.js");
class Elementalerror extends Error {
    constructor(err) {
        const message = "message" in err && typeof err.message === "string"
            ? err.message
            : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;
        if (err.code != null)
            this.code = err.code;
        if (err.data != null)
            this.data = err.data;
        if (err.description != null)
            this.description = err.description;
        if (err.subject != null)
            this.subject = err.subject;
        if (err.title != null)
            this.title = err.title;
        if (err.trace != null)
            this.trace = err.trace;
        this.name = "Elementalerror";
    }
}
exports.Elementalerror = Elementalerror;
/** @internal */
exports.Data$inboundSchema = z
    .object({});
/** @internal */
exports.Data$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Data$;
(function (Data$) {
    /** @deprecated use `Data$inboundSchema` instead. */
    Data$.inboundSchema = exports.Data$inboundSchema;
    /** @deprecated use `Data$outboundSchema` instead. */
    Data$.outboundSchema = exports.Data$outboundSchema;
})(Data$ || (exports.Data$ = Data$ = {}));
function dataToJSON(data) {
    return JSON.stringify(exports.Data$outboundSchema.parse(data));
}
function dataFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Data$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Data' from JSON`);
}
/** @internal */
exports.Elementalerror$inboundSchema = z.object({
    code: z.number().int().optional(),
    data: z.lazy(() => exports.Data$inboundSchema).optional(),
    description: z.string().optional(),
    subject: z.string().optional(),
    title: z.string().optional(),
    trace: z.string().optional(),
})
    .transform((v) => {
    return new Elementalerror(v);
});
/** @internal */
exports.Elementalerror$outboundSchema = z.instanceof(Elementalerror)
    .transform(v => v.data$)
    .pipe(z.object({
    code: z.number().int().optional(),
    data: z.lazy(() => exports.Data$outboundSchema).optional(),
    description: z.string().optional(),
    subject: z.string().optional(),
    title: z.string().optional(),
    trace: z.string().optional(),
}));
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Elementalerror$;
(function (Elementalerror$) {
    /** @deprecated use `Elementalerror$inboundSchema` instead. */
    Elementalerror$.inboundSchema = exports.Elementalerror$inboundSchema;
    /** @deprecated use `Elementalerror$outboundSchema` instead. */
    Elementalerror$.outboundSchema = exports.Elementalerror$outboundSchema;
})(Elementalerror$ || (exports.Elementalerror$ = Elementalerror$ = {}));
//# sourceMappingURL=elementalerror.js.map