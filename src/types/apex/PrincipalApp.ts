// This file has been autogenerated using elemental cli. 
// Use `npm run sync` to update from latest elemental specifications

import { PropertyDetails } from '../utils/const';
import { createFindErrorForIdentity, createValidateIdentity } from '../utils/validate';

/**
 * The list of labels attached to an application request.
 */
export type Labels = (string | null)[];
/**
 * The name of the application.
 */
export type Name = string | null;
/**
 * The tier of the application request.
 */
export type Tier = string | null;

/**
 * Describes the principal information of an application.
 */
export interface PrincipalApp {
  labels?: Labels;
  name?: Name;
  tier?: Tier;
}


// createValidateIdentity<PrincipalApp> creates a validator for the the elemental identity PrincipalApp
export const validatePrincipalApp = createValidateIdentity<PrincipalApp>('principalapp');

export const PrincipalAppProperties: Record<keyof PrincipalApp, PropertyDetails> = {
  "labels": {
    "description": "The list of labels attached to an application request.",
    "title": "Labels",
    "type": "array"
  },
  "name": {
    "description": "The name of the application.",
    "title": "Name",
    "type": [
      "string",
      "null"
    ]
  },
  "tier": {
    "description": "The tier of the application request.",
    "title": "Tier",
    "type": [
      "string",
      "null"
    ]
  },
}

// PrincipalAppIdentity
export const PrincipalAppIdentity = {
  isIdentity: true,
  description: `Describes the principal information of an application.`,
  title: `PrincipalApp`,
  friendlyName: `Principal App`,
  friendlyNamePlural: `Principal Apps`,
  name: 'PrincipalApp',
  restName: 'principalapp',
  resourceName: 'principalapps',
  package: 'colektor',
  archivable: false,
  findErrorForIdentity: createFindErrorForIdentity('principalapp'),
  properties: PrincipalAppProperties,
} as const;
